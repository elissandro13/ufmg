1) a) Não preciso dar free ou text pq ele nunca foi alocado; b) As alocações e frees estavam feitas de maneira incorreta.
2)
==201== Command: ./c4correto.a
==201==
==201== Use of uninitialised value of size 8
==201==    at 0x10917A: main (c4correto.c:13)
==201==
==201== Invalid write of size 4
==201==    at 0x10917A: main (c4correto.c:13)
==201==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==201==
==201==
==201== Process terminating with default action of signal 11 (SIGSEGV)
==201==  Access not within mapped region at address 0x0
==201==    at 0x10917A: main (c4correto.c:13)
==201==  If you believe this happened as a result of a stack
==201==  overflow in your program's main thread (unlikely but
==201==  possible), you can try to increase the size of the
==201==  main thread stack using the --main-stacksize= flag.
==201==  The main thread stack size used in this run was 8388608.
==201== 
==201== HEAP SUMMARY:
==201==     in use at exit: 0 bytes in 0 blocks
==201==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated
==201==
==201== All heap blocks were freed -- no leaks are possible
==201==
==201== Use --track-origins=yes to see where uninitialised values come from
==201== For lists of detected and suppressed errors, rerun with: -s
==201== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Segmentation fault
3) Comentei o //free(text); Descomentei o for(i=0;i<rotation3D->rows;i++)
      free(rotation3D->data[i]);
4) ==213== Command: ./c4correto.a
==213==
==213== 
==213== HEAP SUMMARY:
==213==     in use at exit: 0 bytes in 0 blocks
==213==   total heap usage: 6 allocs, 6 frees, 112 bytes allocated
==213==
==213== All heap blocks were freed -- no leaks are possible
==213==
==213== For lists of detected and suppressed errors, rerun with: -s
==213== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)